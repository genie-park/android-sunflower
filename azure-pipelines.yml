# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- bash: |
   git clone https://github.com/apptestai/ci_addon
   export binary_path=./app/build/outputs/apk/debug/app-debug.apk
   export project_id='831'
   export APPTESTAI_ACCESS_KEY='hjpark@embian.com:d0b20cd289994be0e423e2c42f4c09fe'
   bash ./ci_addon/step.sh
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'apptest-ai test result'
    targetPath: 'test-results/'
  